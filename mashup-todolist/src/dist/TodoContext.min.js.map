{"version":3,"sources":["TodoContext.js"],"names":["_react","_interopRequireWildcard","require","initialTodos","id","text","done","todoReducer","state","action","type","concat","todo","map","_objectSpread","filter","Error","TodoProvider","_ref","children","_useReducer2","_slicedToArray","useReducer"],"mappings":"uVAAA,IAAAA,OAAAC,wBAAAC,QAAA,07DAEA,IAAMC,aAAe,CACnB,CACEC,GAAI,EACJC,KAAM,YACNC,MAAM,GAER,CARFF,GAAA,EAUIC,KAAM,YACNC,MAAM,GAER,CACEF,GAAI,EACJC,KAAM,YACNC,MAAM,GAER,CACEF,GAAI,EACJC,KAAM,YACNC,MAAM,IAIV,SAASC,YAAYC,EAAOC,GAC1B,OAAQA,EAAOC,MACb,IAAK,SACH,OAAOF,EAAMG,OAAOF,EAAOG,MA1B3BT,IAAAA,SAEE,OADNK,EAAAK,IAAA,SAAAD,GAAA,OAEQA,EAAAR,KAFRK,EAAAL,GAEQU,cAAA,GAFRF,EAEQ,CAFRN,MAAAM,EAAAN,OAAAM,IAKA,IAAA,SACM,OADNJ,EAAAO,OAAA,SAAAH,GAAA,OAAAA,EAAAR,KAAAK,EAAAL,KAEEC,QACI,MAAE,IAAAW,MAAA,0BAAAL,OAAAF,EAAAC,QAKF,SAAEO,aAAFC,GAAE,IAAAC,EAAAD,EAAAC,SAAAC,EAAAC,gBAER,EAAArB,OAAAsB,YAAAf,YAAAJ,cAFQ,GAAAiB,EAAA,GAAAA,EAAA,GAGNhB,OADFe","file":"TodoContext.min.js","sourcesContent":["import React, {useReducer} from \"react\";\n\nconst initialTodos = [\n  {\n    id: 1, \n    text: '프로젝트 생성하기',\n    done: true\n  },\n  {\n    id: 2, \n    text: '프로젝트 생성하기',\n    done: true\n  },\n  {\n    id: 3, \n    text: '프로젝트 생성하기',\n    done: false\n  },\n  {\n    id: 4, \n    text: '프로젝트 생성하기',\n    done: false\n  },\n];\n\nfunction todoReducer(state, action) {\n  switch (action.type) {\n    case 'CREATE': \n      return state.concat(action.todo);\n    case 'TOGGLE':\n      return state.map(todo => \n        todo.id === action.id ? {...todo, done: !todo.done} : todo\n      );\n    case 'REMOVE':\n      return state.filter(todo => todo.id !== action.id);\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n\nexport function TodoProvider({children}) {\n  const [state, dispatch] = useReducer(todoReducer, initialTodos);\n  return children;\n\n}"]}