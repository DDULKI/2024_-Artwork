{"version":3,"sources":["TodoProvider.js"],"names":["_react","_interopRequireWildcard","require","initialTodos","id","text","done","todoReducer","state","action","type","concat","todo","map","_objectSpread","Error","TodoStateContext","createContext","TodoDispatchContext"],"mappings":"8PAAA,IAAAA,OAAAC,wBAAAC,QAAA,o1CAEA,IAAMC,aAAe,CACnB,CAHFC,GAAA,EAKIC,KAAM,YACNC,MAAM,GAER,CACEF,GAAI,EACJC,KAAM,YACNC,MAAM,GAER,CACEF,GAAI,EACJC,KAAM,YAbJF,MAAAA,GAGFE,CACAC,GAAM,EAERD,KAAA,YACIC,MADJ,IAMEF,SADFG,YAAAC,EAAAC,GAEEJ,OAAMI,EAAAC,MACNJ,IAAM,SAER,OAAAE,EAAAG,OAAAF,EAAAG,MACI,IADJ,SAEM,OAAEJ,EAFRK,IAAA,SAAAD,GAAA,OAGQA,EAAAR,KAAAK,EAAAL,GAAAU,cAAA,GAAAF,EAAA,CAAAN,MAAAM,EAAAN,OAAAM,IAYN,IAAK,SART,OAASL,EAAAA,OAAT,SAAAK,GAA4BH,OAA5BG,EAAoCR,KAAAK,EAAAL,KAClC,QACE,MAAK,IAAAW,MAAA,0BAAAJ,OAALF,EAAAC,QAGE,IAAAM,kBAAiB,EAAAhB,OAAAiB,iBAAIC,qBACPT,EAAAA,OAAAA,iBAAsBH,mBAAYA,EAAAA,OAAAA","file":"TodoProvider.min.js","sourcesContent":["import React, {userReducer, createContext, useContext, useRef} from 'react';\n\nconst initialTodos = [\n  {\n    id: 1, \n    text: '프로젝트 생성하기', \n    done: true\n  },\n  {\n    id: 2, \n    text: '프로젝트 생성하기', \n    done: true\n  },\n  {\n    id: 3, \n    text: '프로젝트 생성하기', \n    done: false\n  },\n  {\n    id: 4, \n    text: '프로젝트 생성하기', \n    done: true\n  }\n];\n\nfunction todoReducer(state, action) {\n  switch (action.type) {\n    case 'CREATE':\n      return state.concat(action.todo);\n    case 'TOGGLE':\n      return state.map(todo =>\n        todo.id === action.id ? {...todo, done: !todo.done} : todo\n      );\n    case 'REMOVE':\n      return state.filter(todo => todo.id !== action.id);\n    default: \n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n\nconst TodoStateContext = createContext();\nconst TodoDispatchContext = createContext();\nconst TodoNextIdContext = createContext();"]}