{"version":3,"sources":["useAsync.js"],"names":["reducer","state","action","type","loading","data","error","Error","useAsync","callback","deps","skip","dispatch","fetchData"],"mappings":";;;;;;;AAAA;;;;;;;;;;AAEA,SAASA,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,SAAL;AACE,aAAO;AACLC,QAAAA,OAAO,EAAE,IADJ;AAELC,QAAAA,IAAI,EAAE,IAFD;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAK,SAAL;AACE,aAAO;AACLF,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,IAAI,EAAEH,MAAM,CAACG,IAFR;AAGLC,QAAAA,KAAK,EAAC;AAHD,OAAP;;AAKF,SAAK,OAAL;AACE,aAAO;AACLF,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,IAAI,EAAE,IAFD;AAGLC,QAAAA,KAAK,EAAEJ,MAAM,CAACI;AAHT,OAAP;;AAKF;AACE,YAAM,IAAIC,KAAJ,iCAAmCL,MAAM,CAACC,IAA1C,EAAN;AApBJ;AAsBD;;AAED,SAASK,QAAT,CAAkBC,QAAlB,EAAqD;AAAA,MAAzBC,IAAyB,uEAAlB,EAAkB;AAAA,MAAdC,IAAc,uEAAP,KAAO;;AAAA,oBACzB,uBAAWX,OAAX,EAAoB;AAC5CI,IAAAA,OAAO,EAAE,KADmC;AAE5CC,IAAAA,IAAI,EAAE,IAFsC;AAG5CC,IAAAA,KAAK,EAAE;AAHqC,GAApB,CADyB;AAAA;AAAA,MAC5CL,KAD4C;AAAA,MACrCW,QADqC;;AAOnD,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBD,YAAAA,QAAQ,CAAC;AAACT,cAAAA,IAAI,EAAE;AAAP,aAAD,CAAR;AADgB;AAAA;AAAA,4CAGKM,QAAQ,EAHb;;AAAA;AAGRJ,YAAAA,IAHQ;AAIdO,YAAAA,QAAQ,CAAC;AAACT,cAAAA,IAAI,EAAE,SAAP;AAAkBE,cAAAA,IAAI,EAAJA;AAAlB,aAAD,CAAR;AAJc;AAAA;;AAAA;AAAA;AAAA;AAMdO,YAAAA,QAAQ,CAAC;AAACT,cAAAA,IAAI,EAAE,OAAP;AAAgBG,cAAAA,KAAK;AAArB,aAAD,CAAR;;AANc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AASD,wBAAU,YAAK;AACd,QAAGK,IAAH,EAAS;AACPE,IAAAA,SAAS,GAFG,CAGZ;AACA;AACF,GALD,EAKGH,IALH;AAOA,SAAO,CAACT,KAAD,EAAQY,SAAR,CAAP;AACA;;eAEcL,Q","sourcesContent":["import {useReducer, useEffect} from 'react';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'LOADING':\n      return {\n        loading: true,\n        data: null,\n        error: null\n      };\n    case 'SUCCESS':\n      return {\n        loading: false,\n        data: action.data,\n        error:null\n      };\n    case 'ERROR':\n      return {\n        loading: false, \n        data: null,\n        error: action.error\n      };\n    default: \n      throw new Error(`Unhanled action type: ${action.type}`);\n  }\n}\n\nfunction useAsync(callback, deps = [], skip = false) {\n  const [state, dispatch] = useReducer(reducer, {\n    loading: false, \n    data: null,\n    error: false\n  });\n\n  const fetchData = async () => {\n    dispatch({type: 'LOADING'});\n    try {\n      const data = await callback();\n      dispatch({type: 'SUCCESS', data});\n    } catch (e) {\n      dispatch({type: 'ERROR', error: e})\n    }\n  };\n useEffect(()=> {\n  if(skip) return;\n    fetchData();\n    //eslint 설정을 다음 줄에서만 비활성화 \n    //eslint-disable-next-line\n }, deps);\n\n return [state, fetchData];\n}\n\nexport default useAsync;"],"file":"useAsync.dev.js"}